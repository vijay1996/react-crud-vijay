{"version":3,"sources":["components/Header.js","components/Form.js","components/EditForm.js","components/Table.js","components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["Header","server","formStyle","textAlign","color","name","age","phone","city","a","time","Date","toString","fetch","method","headers","response","json","result","count","body","JSON","stringify","admNum","action","window","alert","location","reload","Form","useState","setName","setAge","setPhone","setCity","submitForm","addRecord","style","className","type","onChange","e","target","value","onClick","rollnumber","id","EditForm","props","setRollnumber","marginLeft","marginTop","marginRight","updateStudent","getStudents","then","res","studentHtml","reactDOM","render","document","getElementById","students","push","i","role","viewStudent","_id","deleteStudent","length","tableStyle","padding","paddingTop","paddingLeft","html","marginBottom","Table","bodyStyle","paddingRight","Body","appStyle","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"iNAMeA,EANA,WACX,OACI,wD,8BC+BFC,EAAS,wBAETC,EAAY,CACdC,UAAW,OACXC,MAAO,Q,4CAGX,WAAyBC,EAAMC,EAAKC,EAAOC,GAA3C,qBAAAC,EAAA,6DAEIC,GADIA,EAAO,IAAIC,MACHC,WAFhB,SAGyBC,MAAM,GAAD,OAAIZ,EAAJ,qBAA+B,CACrDa,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAN5B,cAGQC,EAHR,gBASuBA,EAASC,OAThC,cASQC,EATR,OAUQC,EAAQD,EAAOC,MAVvB,UAYqBN,MAAM,GAAD,OAAIZ,EAAJ,gBAA0B,CAC5Ca,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBK,KAAMC,KAAKC,UAAU,CAACC,OAAQJ,EAAO,EAAGd,KAAMA,EAAMC,IAAKA,EAAKC,MAAOA,EAAOC,KAAMA,EAAME,KAAMA,MAjBtG,eAYIM,EAZJ,iBAmBmBA,EAASC,OAnB5B,QAoB0B,aADtBC,EAnBJ,QAoBeM,QACPC,OAAOC,MAAM,+BACbD,OAAOE,SAASC,UAEhBH,OAAOC,MAAM,8CAxBrB,6C,sBA4BeG,MAlEF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACRzB,EADQ,KACF0B,EADE,OAEOD,mBAAS,IAFhB,mBAERxB,EAFQ,KAEH0B,EAFG,OAGWF,mBAAS,IAHpB,mBAGRvB,EAHQ,KAGD0B,EAHC,OAISH,mBAAS,IAJlB,mBAIRtB,EAJQ,KAIF0B,EAJE,KAMf,SAASC,K,0CACLC,CAAU/B,EAAMC,EAAKC,EAAOC,GAGhC,OACI,qBAAK6B,MAAOnC,EAAZ,SACI,iCACI,yCACA,uBAAOoC,UAAU,eAAeC,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAKV,EAAQU,EAAEC,OAAOC,QAAQA,MAAOtC,IAC3F,uBACA,wCACA,uBAAOiC,UAAU,eAAeC,KAAK,SAASC,SAAU,SAACC,GAAD,OAAKT,EAAOS,EAAEC,OAAOC,QAAQA,MAAOrC,IAC5F,uBACA,0CACA,uBAAOgC,UAAU,eAAeC,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAKR,EAASQ,EAAEC,OAAOC,QAAQA,MAAOpC,IAC5F,uBACA,yCACA,uBAAO+B,UAAU,eAAeC,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAKP,EAAQO,EAAEC,OAAOC,QAAQA,MAAOnC,IAC3F,uBAAK,uBACL,uBAAO8B,UAAU,+BAA+BK,MAAM,aAAaJ,KAAK,SAASK,QAAS,SAACH,GAAD,OAAKN,a,4CCL/G,WAA6B9B,EAAMwC,EAAYvC,EAAKC,EAAOC,EAAMsC,GAAjE,eAAArC,EAAA,sEACyBI,MAAM,uCAAwC,CAC/DC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBK,KAAMC,KAAKC,UAAU,CAACjB,KAAMA,EAAMwC,WAAYA,EAAYvC,IAAKA,EAAKC,MAAOA,EAAOC,KAAMA,EAAMsC,GAAIA,MAN1G,cACQ9B,EADR,gBASuBA,EAASC,OAThC,OAUyB,YAVzB,OAUcC,OACNO,OAAOC,MAAM,wBAEbD,OAAOC,MAAM,uBAbrB,4C,sBAqBeqB,MAxCE,SAACC,GAAW,IAAD,EACAlB,mBAASkB,EAAM3C,MADf,mBACjBA,EADiB,KACX0B,EADW,OAEYD,mBAASkB,EAAMzB,QAF3B,mBAEjBsB,EAFiB,KAELI,EAFK,OAGFnB,mBAASkB,EAAM1C,KAHb,mBAGjBA,EAHiB,KAGZ0B,EAHY,OAIEF,mBAASkB,EAAMzC,OAJjB,mBAIjBA,EAJiB,KAIV0B,EAJU,OAKAH,mBAASkB,EAAMxC,MALf,mBAKjBA,EALiB,KAKX0B,EALW,OAMJJ,mBAASkB,EAAMF,IANX,mBAMjBA,EANiB,UAOxB,OACI,sBAAKR,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAf,kBAAwC,qBAAKA,UAAU,eAAf,SAA8B,uBAAOA,UAAU,eAAeC,KAAK,OAAOI,MAAOtC,EAAMmC,SAAU,SAACC,GAAD,OAAKV,EAAQU,EAAEC,OAAOC,YAC/J,qBAAKL,UAAU,eAAf,yBAA+C,qBAAKA,UAAU,eAAf,SAA8B,uBAAOA,UAAU,eAAeC,KAAK,SAASI,MAAOE,EAAYL,SAAU,SAACC,GAAD,OAAKQ,EAAcR,EAAEC,OAAOC,YACpL,qBAAKL,UAAU,eAAf,iBAAuC,qBAAKA,UAAU,eAAf,SAA8B,uBAAOA,UAAU,eAAeC,KAAK,SAASI,MAAOrC,EAAKkC,SAAU,SAACC,GAAD,OAAKT,EAAOS,EAAEC,OAAOC,YAC9J,qBAAKL,UAAU,eAAf,0BAAgD,qBAAKA,UAAU,eAAf,SAA8B,uBAAOA,UAAU,eAAeC,KAAK,OAAOI,MAAOpC,EAAOiC,SAAU,SAACC,GAAD,OAAKR,EAASQ,EAAEC,OAAOC,YACzK,qBAAKL,UAAU,eAAf,kBAAwC,qBAAKA,UAAU,eAAf,SAA8B,uBAAOA,UAAU,eAAeC,KAAK,OAAOI,MAAOnC,EAAMgC,SAAU,SAACC,GAAD,OAAKP,EAAQO,EAAEC,OAAOC,YAC/J,wBAAQL,UAAU,kBAAkBD,MAAO,CAACa,WAAY,KAAMC,UAAW,KAAMC,YAAa,MAAOR,QAAS,SAACH,GAAD,O,qDAAKY,CAAchD,EAAMwC,EAAYvC,EAAKC,EAAOC,EAAMsC,IAAnK,0BANJ,IAMkM,wBAAQR,UAAU,kBAAkBD,MAAO,CAACa,WAAY,KAAMC,UAAW,MAAOP,QAAS,SAACH,GAuBhShB,OAAOE,SAASC,UAvBsL,sBCL1M,SAAS0B,IACLzC,MAAM,GAAD,OAAIZ,EAAJ,sBAA+BsD,MAAK,SAACC,GACtCA,EAAIvC,OAAOsC,MAAK,SAACrC,GACb,IAAIuC,EAAc,GAClBC,IAASC,OAAO,qBAAKrB,UAAU,MAAMQ,GAAG,eAAqBc,SAASC,eAAe,UACrF,IAAIC,EAAW5C,EAAOA,OACtBuC,EAAYM,KAAK,qBAAKzB,UAAU,kCAAf,sBACjBmB,EAAYM,KAAK,qBAAKzB,UAAU,iEAAf,2BACjBmB,EAAYM,KAAK,qBAAKzB,UAAU,iEAAf,qBACjB,IAPwB,eAOf0B,GACLP,EAAYM,KAAK,sBAAKzB,UAAU,uEAAf,cAAwFwB,EAASE,GAAGzC,OAApG,QACjBkC,EAAYM,KAAK,sBAAKzB,UAAU,2DAAf,cAA4EwB,EAASE,GAAG3D,KAAxF,QACjBoD,EAAYM,KAAK,qBAAKzB,UAAU,wEAAwE2B,KAAK,SAASrB,QAAS,SAACH,GAAD,O,2CAAKyB,CAAYJ,EAASE,GAAGG,MAA3I,mBACjBV,EAAYM,KAAK,qBAAKzB,UAAU,wEAAwE2B,KAAK,SAASrB,QAAS,SAACH,GAAD,O,2CAAKY,CAAcS,EAASE,GAAGG,MAA7I,qBACjBV,EAAYM,KAAK,qBAAKzB,UAAU,uEAAuE2B,KAAK,SAASrB,QAAS,SAACH,GAAD,O,2CAAK2B,CAAcN,EAASE,GAAGG,MAA5I,sBALZH,EAAE,EAAGA,EAAEF,EAASO,OAAQL,IAAM,EAA9BA,GAOTN,IAASC,OAAOF,EAAaG,SAASC,eAAe,qBAKjE,IAAM5D,EAAS,wBAETqE,EAAa,CACfnE,UAAW,OACXoE,QAAS,KACTC,WAAY,KACZC,YAAa,M,4CAGjB,WAA6B3B,GAA7B,eAAArC,EAAA,sEACyBI,MAAM,GAAD,OAAIZ,EAAJ,mBAC1B,CACIa,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBK,KAAMC,KAAKC,UAAU,CAACwB,GAAIA,MAPlC,cACQ9B,EADR,gBASuBA,EAASC,OAThC,OAU0B,YAV1B,OAUeC,QACPO,OAAOC,MAAM,iCACbD,OAAOE,SAASC,UAEhBH,OAAOC,MAAM,uBAdrB,4C,kEAkBA,WAA2BoB,GAA3B,mBAAArC,EAAA,sEACyBI,MAAM,GAAD,OAAIZ,EAAJ,gBAA0B,CAChDa,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBK,KAAMC,KAAKC,UAAU,CAACwB,GAAGA,MANjC,cACQ9B,EADR,gBAQuBA,EAASC,OARhC,OASIC,GADIA,EARR,QASoBA,QACZwD,EAAO,IACNX,KAAK,oBAAI1B,MAAO,CAACsC,aAAc,MAA1B,SAAkCzD,EAAOb,QACnDqE,EAAKX,KACD,sBAAKzB,UAAU,MAAf,UACI,qBAAKA,UAAU,kCAAf,yBAAkE,qBAAKA,UAAU,iEAAf,SAAiFpB,EAAOK,SAC1J,qBAAKe,UAAU,kEAAf,iBAA0F,qBAAKA,UAAU,sDAAf,SAAsEpB,EAAOZ,MACvK,qBAAKgC,UAAU,kEAAf,0BAAmG,qBAAKA,UAAU,uDAAf,SAAuEpB,EAAOX,QACjL,qBAAK+B,UAAU,kEAAf,kBAA2F,qBAAKA,UAAU,sDAAf,SAAsEpB,EAAOV,OACxK,qBAAK8B,UAAU,kEAAf,iCAA0G,qBAAKA,UAAU,sDAAf,SAAsEpB,EAAOR,OACvL,wBAAQ4B,UAAU,kBAAkBD,MAAO,CAACa,WAAY,KAAMC,UAAW,MAAOP,QAAS,SAACH,GAAD,OAAKa,KAA9F,sBAGRI,IAASC,OAAOe,EAAMd,SAASC,eAAe,UAtBlD,6C,kEAyBA,WAA6Bf,GAA7B,iBAAArC,EAAA,sEACyBI,MAAM,GAAD,OAAIZ,EAAJ,gBAA0B,CAChDa,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBK,KAAMC,KAAKC,UAAU,CAACwB,GAAGA,MANjC,cACQ9B,EADR,gBAQuBA,EAASC,OARhC,OASIC,GADIA,EARR,QASoBA,OAEhBwC,IAASC,OAAO,cAAC,EAAD,CACRtD,KAAMa,EAAOb,KACbkB,OAAUL,EAAOK,OACjBjB,IAAOY,EAAOZ,IACdC,MAASW,EAAOX,MAChBC,KAAQU,EAAOV,KACfsC,GAAMA,IACLc,SAASC,eAAe,UAlBrC,4C,sBAqBee,MAtGD,WAEV,OADAtB,IAEI,qBAAKR,GAAG,QAAQT,MAAOiC,KCSzBO,EAAY,CACd1B,UAAW,MAGTmB,EAAa,CACfQ,aAAc,MAGHC,EArBF,WACT,OACI,sBAAKzC,UAAU,MAAMD,MAAOwC,EAA5B,UACI,qBAAKvC,UAAU,8BAA8BD,MAAOiC,EAApD,SACI,cAAC,EAAD,MAEJ,qBAAKhC,UAAU,8BAAf,SACI,cAAC,EAAD,UCKhB,IAAM0C,EAAW,CACfT,QAAS,MAGIU,EAbf,WACE,OACE,sBAAK3C,UAAU,MAAMD,MAAO2C,EAA5B,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCESE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAS/B,OACP,cAAC,IAAMgC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASC,eAAe,SAM1BqB,M","file":"static/js/main.79d5865e.chunk.js","sourcesContent":["const Header = () => {\n    return (\n        <h1>CRUD Student Database</h1>            \n    )\n}\n\nexport default Header\n","import {useState} from 'react'\n\nconst Form = () => {\n    const [name, setName] = useState('')\n    const [age, setAge] = useState('')\n    const [phone, setPhone] = useState('')\n    const [city, setCity] = useState('')\n\n    function submitForm () {\n        addRecord(name, age, phone, city)\n    }\n    \n    return (\n        <div style={formStyle}>\n            <form>\n                <label>Name</label>\n                <input className=\"form-control\" type='text' onChange={(e)=>setName(e.target.value)} value={name} />\n                <br/>\n                <label>Age</label>\n                <input className=\"form-control\" type='number' onChange={(e)=>setAge(e.target.value)} value={age} />\n                <br/>\n                <label>Phone</label>\n                <input className=\"form-control\" type='text' onChange={(e)=>setPhone(e.target.value)} value={phone} />\n                <br/>\n                <label>City</label>\n                <input className=\"form-control\" type='text' onChange={(e)=>setCity(e.target.value)} value={city} />\n                <br/><br/>\n                <input className=\"form-control btn btn-primary\" value=\"Add Record\" type='button' onClick={(e)=>submitForm()} />\n            </form>\n        </div>\n    )\n}\n\nconst server = \"http://localhost:3030\"\n\nconst formStyle = {\n    textAlign: 'left',\n    color: '#777'\n}\n\nasync function addRecord(name, age, phone, city) {\n    let time = new Date();\n    time = time.toString()\n    let response = await fetch(`${server}/get_record_count`, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    })\n    let result = await response.json()\n    let count = result.count\n    \n    response = await fetch(`${server}/add_student`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({admNum: count+ 1, name: name, age: age, phone: phone, city: city, time: time})\n    })\n    result = await response.json()\n    if (result.action === 'success') {\n        window.alert(\"Student added successfully!\")\n        window.location.reload()\n    } else {\n        window.alert(\"Some error occured, please try again later\")\n    }\n}\n\nexport default Form\n","import React from 'react'\nimport {useState} from 'react'\n\nconst EditForm = (props) => {\n    const [name, setName] = useState(props.name)\n    const [rollnumber, setRollnumber] = useState(props.admNum)\n    const [age, setAge] = useState(props.age)\n    const [phone, setPhone] = useState(props.phone)\n    const [city, setCity] = useState(props.city)\n    const [id, setId] = useState(props.id)\n    return (\n        <div className='row'>\n            <div className=\"col-sm-4 p-2\">Name</div><div className=\"col-sm-8 p-2\"><input className=\"form-control\" type='text' value={name} onChange={(e)=>setName(e.target.value)} /></div>\n            <div className=\"col-sm-4 p-2\">Roll Number</div><div className=\"col-sm-8 p-2\"><input className=\"form-control\" type='number' value={rollnumber} onChange={(e)=>setRollnumber(e.target.value)} /></div>\n            <div className=\"col-sm-4 p-2\">Age</div><div className=\"col-sm-8 p-2\"><input className=\"form-control\" type='number' value={age} onChange={(e)=>setAge(e.target.value)} /></div>\n            <div className=\"col-sm-4 p-2\">Phone Number</div><div className=\"col-sm-8 p-2\"><input className=\"form-control\" type='text' value={phone} onChange={(e)=>setPhone(e.target.value)} /></div>\n            <div className=\"col-sm-4 p-2\">City</div><div className=\"col-sm-8 p-2\"><input className=\"form-control\" type='text' value={city} onChange={(e)=>setCity(e.target.value)} /></div>\n            <button className=\"btn btn-success\" style={{marginLeft: '0%', marginTop: '2%', marginRight: '2%'}} onClick={(e)=>updateStudent(name, rollnumber, age, phone, city, id)}>Save Changes</button> <button className=\"btn btn-primary\" style={{marginLeft: '0%', marginTop: '2%'}} onClick={(e)=>reloadPage()}>Back</button>\n        </div>\n    )\n}\n\nasync function updateStudent(name, rollnumber, age, phone, city, id) {\n    let response = await fetch('http://localhost:3030/update_student', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({name: name, rollnumber: rollnumber, age: age, phone: phone, city: city, id: id})\n    })\n\n    let result = await response.json()\n    if(result.result === 'success') {\n        window.alert('Updated successfully')\n    } else {\n        window.alert('Some error occurred')\n    }\n}\n\nfunction reloadPage() {\n    window.location.reload()\n}\n\nexport default EditForm\n","import reactDOM from 'react-dom'\n\nimport EditForm from './EditForm'\n\nconst Table = () => {\n    getStudents()\n    return (\n        <div id='table' style={tableStyle}>\n        </div>\n    )\n}\n\nfunction getStudents() {\n    fetch(`${server}/get_all_students`).then((res) => {\n        res.json().then((result) => {\n            let studentHtml = []\n            reactDOM.render(<div className='row' id='innerTable'></div>, document.getElementById('table'))\n            let students = result.result\n            studentHtml.push(<div className='col-sm-3 p-2 border border-dark'>Roll No</div>)\n            studentHtml.push(<div className='col-sm-6 p-2 border-top border-right border-bottom border-dark'>Student name</div>)\n            studentHtml.push(<div className='col-sm-3 p-2 border-top border-right border-bottom border-dark'>Action</div>)\n            for (let i=0; i<students.length; i++) {\n                studentHtml.push(<div className='col-sm-3 p-1 border-left border-right border-bottom border-secondary'> {students[i].admNum} </div>)\n                studentHtml.push(<div className='col-sm-6 p-1 border-right border-bottom border-secondary'> {students[i].name} </div>)\n                studentHtml.push(<div className='col-sm-1 p-1 text-primary border-right border-bottom border-secondary' role='button' onClick={(e)=>viewStudent(students[i]._id)}>View</div>)\n                studentHtml.push(<div className='col-sm-1 p-1 text-warning border-right border-bottom border-secondary' role='button' onClick={(e)=>updateStudent(students[i]._id)}>Update</div>)\n                studentHtml.push(<div className='col-sm-1 p-1 text-danger border-right border-bottom border-secondary' role='button' onClick={(e)=>deleteStudent(students[i]._id)}>Delete</div>)\n            }\n            reactDOM.render(studentHtml, document.getElementById('innerTable'))\n        })\n    })\n}\n\nconst server = 'http://localhost:3030'\n\nconst tableStyle = {\n    textAlign: 'left',\n    padding: '2%',\n    paddingTop: '1%',\n    paddingLeft: '3%'\n}\n\nasync function deleteStudent(id) {\n    let response = await fetch(`${server}/delete_student`,\n    {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({id: id})\n    })\n    let result = await response.json()\n    if (result.result === 'success') {\n        window.alert(\"Student deleted successfully.\")\n        window.location.reload()\n    } else {\n        window.alert(\"Some error occured.\")\n    }\n}\n\nasync function viewStudent(id) {\n    let response = await fetch(`${server}/fetch_by_id`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({id:id})\n    })\n    let result = await response.json()\n    result = result.result\n    let html = []\n    html.push(<h3 style={{marginBottom: '2%'}}>{result.name}</h3>)\n    html.push(\n        <div className='row'>\n            <div className=\"col-sm-4 p-2 border border-dark\">Roll Number</div><div className=\"col-sm-8 p-2 border-top border-right border-bottom border-dark\">{result.admNum}</div>\n            <div className=\"col-sm-4 p-2 border-left border-right border-bottom border-dark\">Age</div><div className=\"col-sm-8 p-2 border-right border-bottom border-dark\">{result.age}</div>\n            <div className=\"col-sm-4 p-2 border-left border-right border-bottom border-dark\">Phone Number</div><div className=\"col-sm-8 p-2  border-right border-bottom border-dark\">{result.phone}</div>\n            <div className=\"col-sm-4 p-2 border-left border-right border-bottom border-dark\">City</div><div className=\"col-sm-8 p-2 border-right border-bottom border-dark\">{result.city}</div>\n            <div className=\"col-sm-4 p-2 border-left border-right border-bottom border-dark\">Admission Timestamp</div><div className=\"col-sm-8 p-2 border-right border-bottom border-dark\">{result.time}</div>\n            <button className=\"btn btn-primary\" style={{marginLeft: '0%', marginTop: '2%'}} onClick={(e)=>getStudents()}>Back</button>\n        </div>\n    )\n    reactDOM.render(html, document.getElementById('table'))\n}\n\nasync function updateStudent(id) {\n    let response = await fetch(`${server}/fetch_by_id`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({id:id})\n    })\n    let result = await response.json()\n    result = result.result\n\n    reactDOM.render(<EditForm \n            name={result.name}\n            admNum = {result.admNum}\n            age = {result.age}\n            phone = {result.phone}\n            city = {result.city}\n            id = {id}\n        /> , document.getElementById('table'))\n}\n\nexport default Table\n","import Form from './Form'\nimport Table from './Table'\n\nconst Body = () => {\n    return (\n        <div className=\"row\" style={bodyStyle}>\n            <div className=\"col-sm-12 col-md-8 col-lg-9\" style={tableStyle}>\n                <Table />\n            </div>            \n            <div className=\"col-sm-12 col-md-4 col-lg-3\">\n                <Form />\n            </div>\n        </div>\n    )\n}\n\nconst bodyStyle = {\n    marginTop: '5%'\n}\n\nconst tableStyle = {\n    paddingRight: '5%'\n}\n\nexport default Body\n","import './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nimport Header from './components/Header'\nimport Body from './components/Body'\n\nfunction App() {\n  return (\n    <div className=\"App\" style={appStyle}>\n      <Header />\n      <Body />\n    </div>\n  );\n}\n\nconst appStyle = {\n  padding: '2%'\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}